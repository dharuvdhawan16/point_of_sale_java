/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package myproject;

import com.mysql.jdbc.PreparedStatement;
import java.awt.Component;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import static myproject.dbvar.dpass;
import static myproject.dbvar.durl;
import static myproject.dbvar.duser;

public class transaction extends javax.swing.JInternalFrame {

    String max="";
    public transaction() {
        initComponents();
      
    }

/**
     * Creates new form transaction
     */
        /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        s4 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        s5 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        s61 = new javax.swing.JRadioButton();
        s62 = new javax.swing.JRadioButton();
        s2 = new javax.swing.JComboBox<>();
        s3 = new javax.swing.JComboBox<>();
        jButton3 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        s1 = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        s7 = new javax.swing.JLabel();
        s8 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("Supplier ID");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Transaction ID");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        jLabel11.setText("Transaction Manager");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Product ID");

        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText("Quantity");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel12.setText("Paid Amount");

        s5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                s5ActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel13.setText("Transaction Type");

        buttonGroup1.add(s61);
        s61.setText("Bought");

        buttonGroup1.add(s62);
        s62.setText("Sold");

        s2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose Product ID" }));

        s3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose Supplier ID" }));
        s3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                s3ActionPerformed(evt);
            }
        });

        jButton3.setText("Show All");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton2.setText("Details");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        s1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose Transaction ID" }));

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel14.setText("Transaction Date");

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel15.setText("Transaction Time");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                                    .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(s5)
                                    .addComponent(s4)
                                    .addComponent(s2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(s3, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(s1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(s7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(s61)
                                        .addGap(28, 28, 28)
                                        .addComponent(s62)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(s8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                .addGap(38, 38, 38))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(s1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(s2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(s3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7)
                    .addComponent(s4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel12)
                    .addComponent(s5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(s61)
                        .addComponent(s62))
                    .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(s7, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(s8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        try{

            String url = "jdbc:mysql://localhost/store";
            String user="root";
            Connection conn =DriverManager.getConnection(durl ,duser,dpass );
            try{

                String q="insert into transaction(pid,sid,qty,amt,ttype,tdate,ttime) values(?,?,?,?,?,?,?)";
                PreparedStatement myst = (PreparedStatement) conn.prepareStatement(q);
                String big[] = s2.getSelectedItem().toString().split(":");
                myst.setString(1,big[0]);
                String name[] = s3.getSelectedItem().toString().split(":");
                myst.setString(2,name[0]);
                myst.setString(3,s4.getText());
                myst.setString(4,s5.getText());
                if(s61.isSelected())
                {
                   myst.setString(5,"bought");
                }
                
                else
                {
                  myst.setString(5, "sold");
                }
                 
                SimpleDateFormat myformat = new SimpleDateFormat("yyyy-MM-dd");
                SimpleDateFormat myformat1 = new SimpleDateFormat("HH:mm:ss");
                Date date = new Date();
                myst.setString(6,myformat.format(date));
                myst.setString(7,myformat1.format(date));

                int count = myst.executeUpdate();

                if(count==1)
                {
                    JOptionPane.showMessageDialog(rootPane, "transaction added successfully");
                    tid();
                    maxtid();
                    clear();
                }
                else
                {
                    JOptionPane.showMessageDialog(rootPane, "Supplier not added successfully");
                    tid();
                    maxtid();
                    clear();
                }

            }
            catch(SQLException e)
            {
                JOptionPane.showMessageDialog(rootPane,"Error in connectivity"+e.getMessage());
            }

            finally
            {
                 conn.close();
            }
        }
        catch(SQLException e)
        {

            JOptionPane.showMessageDialog(rootPane,"Cannot connect");

        }
        
        

    }//GEN-LAST:event_jButton1ActionPerformed

    private void s5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_s5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_s5ActionPerformed

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
       tid();
       maxtid();
       product();
       supplier();   
       time();
    }//GEN-LAST:event_formInternalFrameOpened

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
          record obj =new record();
        Component add = parentform.abc.add(obj);
          obj.setVisible(true);
          find();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try{

            String url = "jdbc:mysql://localhost/store";
            String user="root";
            Connection conn =DriverManager.getConnection(durl ,duser,dpass );
            try{

                String q="select * from transaction where tid = ?";
                PreparedStatement myst = (PreparedStatement) conn.prepareStatement(q);
                myst.setString(1, s1.getSelectedItem().toString());
                ResultSet rs = myst.executeQuery(q);

                if(rs.next())
                {
                    s2.setSelectedItem(rs.getString(2));
                    s3.setSelectedItem(rs.getString(3));
                    s4.setText(rs.getString(4));
                    s5.setText(rs.getString(5));
                    if(rs.getString(6).toString().equalsIgnoreCase("bought"))
                    {
                     s61.setSelected(true);
                    }
                    
                    else
                    {
                     s62.setSelected(true);
                    }
                    
                    s7.setText(rs.getDate(7).toString());
                    s8.setText(rs.getTime(8).toString());
                }
                else
                {
                    JOptionPane.showMessageDialog(rootPane, "transaction not found");
                    tid();
                    maxtid();
                    clear();
                }

            }
            catch(SQLException e)
            {
                JOptionPane.showMessageDialog(rootPane,"Error in connectivity"+e.getMessage());
            }

            finally
            {
                 conn.close();
            }
        }
        catch(SQLException e)
        {

            JOptionPane.showMessageDialog(rootPane,"Cannot connect");

        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void s3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_s3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_s3ActionPerformed
void supplier()
{

    try{

        String url = "jdbc:mysql://localhost/store";
        String user="root";
         Connection conn =DriverManager.getConnection(durl ,duser,dpass );
        try{
         
          String q="select sid , sname from supplier order by sname";
          PreparedStatement myst = (PreparedStatement) conn.prepareStatement(q);
          ResultSet rs = myst.executeQuery();    
        
        
        
        
        if(rs.next())
        {
         
            do{
             
            s3.addItem(rs.getString(1)+":"+rs.getString(2));
            
            }while(rs.next());
         
        }
        else
        {
         
            JOptionPane.showMessageDialog(rootPane,"no category present");
        
        
        }
      
        }
        catch(Exception e)
        {        
        JOptionPane.showMessageDialog(rootPane,"Error in connectivity"+e.getMessage());
        }
        
        finally
        {
        
          conn.close();
        }
}
catch(Exception e)
{

JOptionPane.showMessageDialog(rootPane,"Cannot connect");

}
     

}

    
void product()
 {
     

    
       try{

        String url = "jdbc:mysql://localhost/store";
        String user="root";
         Connection conn =DriverManager.getConnection(durl ,duser,dpass );
        try{
         
          String q="select pid , pname from product order by pname desc";
          PreparedStatement myst = (PreparedStatement) conn.prepareStatement(q);
          ResultSet rs = myst.executeQuery();  
        
        
        
        
        if(rs.next())
        {
         
            do{
             
            s2.addItem(rs.getString(1)+":"+rs.getString(2));
            
            }while(rs.next());
         
        }
      
        }
        catch(Exception e)
        {        
        JOptionPane.showMessageDialog(rootPane,"Error in connectivity"+e.getMessage());
        }
        
        finally
        {
        
          conn.close();
        }
}
catch(Exception e)
{

JOptionPane.showMessageDialog(rootPane,"Cannot connect");

}
 
 }
    void clear()
    {
     
        s1.setSelectedItem(max);
        s2.setSelectedIndex(0);
        s3.setSelectedItem(0);
        s4.setText(null);
        s5.setText(null);
        buttonGroup1.clearSelection();
        time();
     
    }
    
    void tid()
    {
        
        try{

        String url = "jdbc:mysql://localhost/store";
        String user="root";
         Connection con =DriverManager.getConnection(durl ,duser,dpass );
        try{
         
          String q="select tid from transaction ";
        PreparedStatement myst = (PreparedStatement) con.prepareStatement(q);
        
      
        ResultSet rs = myst.executeQuery();
        
        
        
        
        
        if(rs.next())
        {
          do
          {
           s1.addItem(rs.getString(1));
          }while(rs.next());       
        }
        
          else
           {
             JOptionPane.showMessageDialog(rootPane,"no transaction");   
           }
        }
        
        
        catch(Exception e)
        {        
        JOptionPane.showMessageDialog(rootPane,"Error in connectivity"+e.getMessage());
        }
        
        finally
        {
        
          con.close();
        }
}
catch(Exception e)
{

JOptionPane.showMessageDialog(rootPane,"Cannot connect");

}
        
    }
    
    
    void maxtid()
    {
        
        try{

        String url = "jdbc:mysql://localhost/store";
        String user="root";
         Connection con =DriverManager.getConnection(durl ,duser,dpass );
        try{
         
          String q="select max(tid) from transaction ";
        PreparedStatement myst = (PreparedStatement) con.prepareStatement(q);
        
      
        ResultSet rs = myst.executeQuery();
        
        
        
        
        
        if(rs.next())
        {
          s1.setSelectedItem(rs.getString(1));
          max=rs.getString(1);
        }
        
          else
           {
             JOptionPane.showMessageDialog(rootPane,"no transaction");   
           }
        }
        
        
        catch(Exception e)
        {        
        JOptionPane.showMessageDialog(rootPane,"Error in connectivity"+e.getMessage());
        }
        
        finally
        {
        
          con.close();
        }
}
catch(Exception e)
{

JOptionPane.showMessageDialog(rootPane,"Cannot connect");

}
        
    }
void find()
{

   
        try{

        String url = "jdbc:mysql://localhost/store";
        String user="root";
         Connection con =DriverManager.getConnection(durl ,duser,dpass );
        try{
         
          String q="select * from transaction where tid =? ";
        PreparedStatement myst = (PreparedStatement) con.prepareStatement(q);
        myst.setString(1,s1.getSelectedItem().toString() );
        ResultSet rs = myst.executeQuery();
        
        
        
        
        
        if(rs.next())
        {
        //s1.setSelectedItem(rs.getString(1));
        s2.setSelectedItem(rs.getString(2));
        s3.setSelectedItem(rs.getString(3));
        s4.setText(rs.getString(4));
        s5.setText(rs.getString(5));
         if(rs.getString(6).equalsIgnoreCase("bought"))
         {
            s61.setSelected(true);
         }
        
          else
          {
              s62.setSelected(true);
          }         
        }
        
          else
           {
             JOptionPane.showMessageDialog(rootPane,"no transaction");   
           }
        }
        
        
        catch(Exception e)
        {        
        JOptionPane.showMessageDialog(rootPane,"Error in connectivity"+e.getMessage());
        }
        
        finally
        {
        
          con.close();
        }
}
catch(Exception e)
{

JOptionPane.showMessageDialog(rootPane,"Cannot connect");

}

}


void time()
{
 
   SimpleDateFormat myformat = new SimpleDateFormat("yyyy-MM-dd");
   SimpleDateFormat myformat1 = new SimpleDateFormat("HH:mm:ss");
   Date date = new Date();
   s7.setText(myformat.format(date));
   s8.setText(myformat1.format(date));

}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JComboBox<String> s1;
    private javax.swing.JComboBox<String> s2;
    private javax.swing.JComboBox<String> s3;
    private javax.swing.JTextField s4;
    private javax.swing.JTextField s5;
    private javax.swing.JRadioButton s61;
    private javax.swing.JRadioButton s62;
    private javax.swing.JLabel s7;
    private javax.swing.JLabel s8;
    // End of variables declaration//GEN-END:variables
}
